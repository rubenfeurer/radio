name: Build and Release

on:
  push:
    branches: 
      - main
      - development
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Build Frontend
        working-directory: web
        run: |
          npm ci
          npm run build
          
      - name: Create Package
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # For tagged releases (production)
            VERSION=${GITHUB_REF#refs/tags/}
          else
            # For branch builds (development)
            BRANCH=${GITHUB_REF#refs/heads/}
            VERSION="${BRANCH}-$(date +'%Y%m%d')-${GITHUB_SHA::7}"
          fi
          
          PACKAGE="radio-${VERSION}"
          
          # Create package structure
          mkdir -p dist/${PACKAGE}/{src,config,web,install}
          
          # Copy backend files
          cp -r src/{api,core,hardware,utils} dist/${PACKAGE}/src/
          
          # Copy frontend build
          cp -r web/build dist/${PACKAGE}/web/
          
          # Copy config files
          cp -r config/default_*.json dist/${PACKAGE}/config/
          
          # Copy installation files
          cp install/{install.sh,radio.service} dist/${PACKAGE}/install/
          cp {manage_radio.sh,requirements.txt,LICENSE,README.md} dist/${PACKAGE}/
          
          # Create archive
          cd dist
          tar -czf ${PACKAGE}.tar.gz ${PACKAGE}
          echo "PACKAGE_NAME=${PACKAGE}.tar.gz" >> $GITHUB_ENV
          
      - name: Create Release (Tagged)
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/${{ env.PACKAGE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Development Build
        uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/development'
        with:
          name: development-build
          path: dist/${{ env.PACKAGE_NAME }}
          retention-days: 7