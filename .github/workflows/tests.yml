name: Radio Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches:
      - "*"
      - "!main"
      - "!develop"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v4

      # Cache pip dependencies
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Set up BuildKit
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('docker/dev/Dockerfile.dev', 'install/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build with optimized caching
      - name: Build development image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/dev/Dockerfile.dev
          load: true
          tags: radio-dev:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            DOCKER_BUILDKIT=1

      # Run tests in container with root permissions
      - name: Run tests
        if: success()
        run: |
          docker compose -f docker/compose/docker-compose.dev.yml run --rm \
            --user root \
            -v ${PWD}:/home/radio/radio \
            backend bash -c "
              # Install system dependencies
              apt-get update && \
              apt-get install -y python3 python3-venv python3-pip && \

              # Create logs directory with correct permissions
              mkdir -p /home/radio/radio/logs && \
              chown -R radio:radio /home/radio/radio && \

              # Create and activate venv
              python3 -m venv /home/radio/radio/venv && \
              chown -R radio:radio /home/radio/radio/venv && \

              # Run tests as radio user
              su radio -c '
                source /home/radio/radio/venv/bin/activate && \
                cd /home/radio/radio && \
                pip install -r install/requirements.txt -r install/requirements-dev.txt && \

                # Run tests with explicit output path
                PYTHONPATH=/home/radio/radio \
                python -m pytest \
                  --verbose \
                  --cov=src/core \
                  --cov=src/api \
                  --cov=src/hardware \
                  --cov-report=term-missing \
                  --cov-fail-under=50 \
                  --junitxml=/home/radio/radio/pytest-results.xml \
                  tests/ && \
                chmod 644 /home/radio/radio/pytest-results.xml
              '
            "

      # Add test summary
      - name: Test Summary
        uses: test-summary/action@v2
        if: always()
        with:
          paths: |
            pytest-results.xml
