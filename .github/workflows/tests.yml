name: Radio Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-dev python3-setuptools gcc make \
          mpv libmpv-dev \
          python3-pip python3-venv \
          libasound2-dev \
          network-manager
        
    - name: Setup and verify pigpio
      run: |
        # Clean up any existing pigpio
        sudo pkill pigpiod || true
        sudo rm -rf /var/run/pigpio* || true
        
        # Download and build pigpio
        wget https://github.com/joan2937/pigpio/archive/master.zip
        unzip master.zip
        cd pigpio-master
        make
        sudo make install
        cd ..
        
        # Create required directories with proper permissions
        sudo mkdir -p /var/run/pigpio
        sudo chmod 777 /var/run/pigpio
        
        # Start pigpio daemon with debug output
        echo "Starting pigpiod..."
        sudo pigpiod -v
        sleep 2
        
        # Verify daemon is running
        if pgrep pigpiod; then
          echo "✅ pigpiod is running"
          ps aux | grep pigpio
          sudo netstat -tulpn | grep 8888 || echo "Port 8888 not found"
        else
          echo "❌ pigpiod failed to start"
          exit 1
        fi
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install httpx pytest pytest-asyncio pytest-cov pytest-mock pytest-timeout
        
    - name: Run tests with mocked hardware
      env:
        MOCK_HARDWARE: "true"
        PYTHONPATH: .
        TEST_MODE: "CI"
        DISABLE_HARDWARE: "true"
        SKIP_NM_CHECK: "true"
        PYTEST_TIMEOUT: "30"
        PYTEST_ASYNCIO_MODE: "auto"
        PIGPIO_ADDR: "127.0.0.1"
        PIGPIO_PORT: "8888"
      run: |
        # Double check pigpio daemon before tests
        if ! pgrep pigpiod; then
          echo "Restarting pigpiod..."
          sudo pigpiod
          sleep 2
        fi
        
        # Verify pigpio is accessible
        echo "Testing pigpio connection..."
        python3 -c "import pigpio; pi=pigpio.pi(); print('Pigpio connection successful' if pi.connected else 'Failed to connect')"
        
        # Run pytest
        pytest -v tests/ \
          --cov=src \
          --capture=no \
          --log-cli-level=DEBUG \
          --asyncio-mode=auto \
          -p no:warnings
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  check:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Tests passed
        run: echo "All tests passed successfully!"