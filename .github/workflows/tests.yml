name: Radio Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches:
      - "*"
      - "!main"
      - "!develop"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: success()

      - name: Cache Docker layers
        uses: actions/cache@v4
        if: success()
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('docker/dev/Dockerfile.backend', 'install/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build development image
        uses: docker/build-push-action@v5
        if: success()
        with:
          context: .
          file: ./docker/dev/Dockerfile.backend
          load: true
          tags: radio-dev:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      # Run tests in container
      - name: Run tests
        if: success()
        run: |
          # Run tests in container
          docker compose -f docker/docker-compose.dev.yml run --rm \
            -v ${PWD}:/home/radio/radio \
            backend bash -c "
              # Ensure venv exists and is activated
              python -m venv /home/radio/radio/venv && \
              . /home/radio/radio/venv/bin/activate && \
              pip install -r requirements.txt -r requirements-dev.txt && \

              # Create test directories
              mkdir -p tests/unit tests/api tests/integration && \

              # Run tests
              python -m pytest \
                --verbose \
                --cov=src/core \
                --cov=src/api \
                --cov=src/hardware \
                --cov-report=xml \
                --cov-report=term-missing \
                --cov-fail-under=50 \
                --junitxml=pytest-results.xml \
                tests/
            "

      # Move cache
      - name: Move cache
        if: success()
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Add test summary
      - name: Test Summary
        uses: test-summary/action@v2
        if: always()
        with:
          paths: "pytest-results.xml"

      # Upload coverage reports
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: success()
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
